{"version":3,"sources":["webpack:///src/app/authentication/404/not-found.component.ts","webpack:///src/app/authentication/404/not-found.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.routing.ts","webpack:///src/app/authentication/lock/changepassword.component.ts","webpack:///src/app/authentication/lock/changepassword.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/login2/login2.component.ts","webpack:///src/app/authentication/login2/login2.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup2/signup2.component.ts","webpack:///src/app/authentication/signup2/signup2.component.html","webpack:///src/app/services/custom-validation.service.ts"],"names":["NotfoundComponent","selector","templateUrl","AuthenticationModule","forChild","declarations","imports","AuthenticationRoutes","path","children","component","changepasswordComponent","fb","apiservice","router","toaster","customvalidator","changepassForm","group","required","minLength","maxLength","validator","passwordMatchValidator","datapass","value","retypepassword","console","log","httpchange","subscribe","res","message","success","navigate","changepass","BackToDashboard","LoginComponent","loginform","recoverform","showRecoverForm","Login2Component","regx","email2","email","loginForm","pattern","password","rememberMe","checkRememberMe","data","controls","httplogin","accessToken","userData","localStorage","setItem","JSON","stringify","removeItem","sessionStorage","getItem","userDetails","parse","setValue","e","target","checked","body","httpforget","window","location","reload","rememberFunc","$event","preventDefault","forget","styleUrls","SignupComponent","Signup2Component","CustomValidationService","confirmPassword","formGroup","passwordControl","confirmPasswordControl","errors","passwordMismatch","setErrors","providedIn"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotfoundComponent implements AfterViewInit {\n  ngAfterViewInit() {}\n}\n","<div class=\"error-box\">\n    <div class=\"error-body text-center\">\n        <h1 class=\"error-title text-danger\">404</h1>\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component'; \nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Signup2Component } from './signup2/signup2.component';\n\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    NotfoundComponent,\n    LoginComponent,\n    SignupComponent,\n    changepasswordComponent,\n    Login2Component,\n    Signup2Component\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(AuthenticationRoutes),\n    NgbModule,\n    HttpClientModule,\n  ]\n})\nexport class AuthenticationModule {}\n","import { Routes } from '@angular/router';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component';\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Signup2Component } from './signup2/signup2.component';\n\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: 'changepassword',\n        component: changepasswordComponent\n      },\n      {\n        path: 'login2',\n        component: LoginComponent\n      },\n      {\n        path: 'login',\n        component: Login2Component\n      },\n      {\n        path: 'signup',\n        component: SignupComponent\n      },\n      {\n        path: 'signup2',\n        component: Signup2Component\n      }\n    ]\n  }\n];\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from 'src/app/services/api.service';\nimport {CustomValidationService} from '../../services/custom-validation.service'\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html'\n})\nexport class changepasswordComponent {\n  changepassForm:FormGroup;\n  constructor(private fb:FormBuilder,private apiservice:ApiService,private router:Router,private toaster:ToastrService,private customvalidator:CustomValidationService) \n  {}\n  ngOnInit()\n  {\n    this.changepassForm=this.fb.group({\n      \"oldPassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n      \"newPassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n      \"retypepassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]]\n    },{\n     validator:this.customvalidator.passwordMatchValidator(\"newPassword\",\"retypepassword\")\n    });\n  }\n  changepass()\n  {\n   let datapass=this.changepassForm.value;\n   delete datapass.retypepassword;\n   console.log(datapass);\n   this.apiservice.httpchange(datapass).subscribe(res=>{\n     console.log(res);\n     if(res.message==\"Password Changed Successfully\")\n     {\n      this.toaster.success(res.message,'Change Password');\n      this.router.navigate(['dashboard']);\n     }\n     \n   })\n  }\n  BackToDashboard()\n  {\n    this.router.navigate(['dashboard']);\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;background-size: 100%;background-position: center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo-text.png\"></span>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form [formGroup]=\"changepassForm\" class=\"form-horizontal m-t-20\" >\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" formControlName=\"oldPassword\" type=\"password\" required=\"\" placeholder=\"Old Password\">\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('oldPassword').hasError('required') && changepassForm.controls['oldPassword'].touched\">\n                                    *Old Password is required.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('oldPassword').hasError('minlength') &&\n                                    !changepassForm.get('oldPassword').hasError('required')\">\n                                     *Min 8 characters.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('oldPassword').hasError('maxlength') &&\n                                    !changepassForm.get('oldPassword').hasError('required')\">\n                                    *Maximum 16 characters long.\n                                </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" formControlName=\"newPassword\" type=\"password\" required=\"\" placeholder=\"New Password\">\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('newPassword').hasError('required') && changepassForm.controls['newPassword'].touched\">\n                                    *New Password is required.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('newPassword').hasError('minlength') &&\n                                    !changepassForm.get('newPassword').hasError('required')\">\n                                     *Min 8 characters.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('newPassword').hasError('maxlength') &&\n                                    !changepassForm.get('newPassword').hasError('required')\">\n                                    *Maximum 16 characters long.\n                                </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" formControlName=\"retypepassword\" required=\"\" placeholder=\"Retype Password\">\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('required') && changepassForm.controls['retypepassword'].touched\">\n                                    *Retype Password is required.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('minlength') &&\n                                    !changepassForm.get('retypepassword').hasError('required')\">\n                                     *Min 8 characters.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('maxlength') &&\n                                    !changepassForm.get('retypepassword').hasError('required')\">\n                                    *Maximum 16 characters long.\n                                </mat-error>\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('passwordMismatch') &&\n                                    !changepassForm.get('retypepassword').hasError('required')\">\n                                    *Password don't match\n                                </mat-error>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg bg-white text-primary\"[disabled]=\"!changepassForm.valid\" (click)=\"changepass()\" type=\"submit\">Submit</button>\n                            </div>\n                            <div class=\"col-xs-12 text-center\">\n                                <a  (click)=\"BackToDashboard()\" class=\"btn btn-block btn-lg bg-white text-primary\">Cancel</a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  constructor() { }\n\n  loginform = true;\n  recoverform = false;\n\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\">\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n                        </div>\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\">\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">Log In</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                <div class=\"social\">\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab fa-facebook\"></i> </a>\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab fa-google-plus\"></i> </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10\">\n                            <div class=\"col-sm-12 text-center\">\n                                Don't have an account? <a href=\"#/authentication/signup\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\">\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Username\">\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-danger\" type=\"submit\" name=\"action\">Reset</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport{ApiService} from '../../services/api.service'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.scss']\n\n})\nexport class Login2Component {\n  loginForm:FormGroup;\n  loginform = true;\n  regx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/\n  recoverform = false;\n  email2 = new FormControl('',[Validators.required, Validators.email]);\n  constructor(private fb:FormBuilder,private apiservice:ApiService,private router:Router,private toaster:ToastrService) { }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: new FormControl(\"\", [Validators.required, Validators.pattern(this.regx)]),\n      password: new FormControl(\"\", [Validators.required,Validators.minLength(8)]),\n      rememberMe:new FormControl(false),\n    });\n    this.checkRememberMe();\n  }\n    onLogin()\n    {\n         let data=this.loginForm.value;\n         delete data.rememberMe;\n         let rememberMe=this.loginForm.controls['rememberMe'].value;\n       this.apiservice.httplogin(data).subscribe(res=>{\n         console.log(res.data.accessToken);\n         if(res.message==\"Account Login Successfully\")\n         {\n           this.toaster.success(res.message,'Login');\n           if (rememberMe) {\n            let userData = this.loginForm.value;\n            localStorage.setItem('rememberMe', JSON.stringify(userData))\n          } else {\n            localStorage.removeItem('rememberMe')\n          }\n           sessionStorage.setItem(\"accessToken\",res.data.accessToken);\n             this.router.navigate(['dashboard']);\n         }\n         \n       });\n    }\n\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  checkRememberMe() {\n\n    if (localStorage.getItem('rememberMe')) {\n      let userDetails = JSON.parse(localStorage.getItem('rememberMe'));\n      this.loginForm.controls['email'].setValue(userDetails.email);\n      this.loginForm.controls['password'].setValue(userDetails.password);\n      this.loginForm.controls['rememberMe'].setValue(\"true\");\n    }\n  }\n  rememberFunc(e)\n  {\n    this.loginForm.controls['rememberMe'].setValue( e.target.checked);\n  }\n  forget()\n  {\nlet body={'email':this.email2.value};\n         console.log(body);\n         this.apiservice.httpforget(body).subscribe(res=>{\n           //console.log(res);\n           if(res.message==\"New Password Sent\")\n         {\n           this.toaster.success(res.message,'Forget Password');\n           sessionStorage.setItem(\"accessToken\",res.data.accessToken);\n            window.location.reload();\n         }\n         \n         })\n             \n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\n    <div class=\"auth-box on-sidebar\">\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-text.png\" alt=\"logo\"  /></span>\n                <!-- <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5> -->\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form [formGroup]=\"loginForm\"class=\"form-horizontal m-t-20\" id=\"loginform\" >\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"email\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\" *ngIf=\"loginForm.get('email').hasError('required') && loginForm.controls['email'].touched\">\n                                *Email is <strong>required</strong>\n                            </mat-error>\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\" *ngIf=\"loginForm.get('email').hasError('email') &&\n                                  !loginForm.get('email').hasError('required')\">\n                            *Email is <strong>not valid</strong>\n                        </mat-error>\n                        </div>\n                         \n                        \n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                            </div>\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\"  *ngIf=\"loginForm.get('password').hasError('required') && loginForm.controls['password'].touched\">\n                                *Password is <strong>required</strong>\n                            </mat-error>\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\"  *ngIf=\" loginForm.get('password').hasError('minlength') &&\n                                  !loginForm.get('password').hasError('required')\">\n                                *Minimum 8 Character\n                            </mat-error>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" (change)=\"rememberFunc($event)\" formControlName=\"rememberMe\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                    <button  class=\"btn btn-block btn-lg bg-white text-primary\" (click)=\"  onLogin();\" type=\"submit\">Log In</button>\n                            </div>\n                        </div>\n                        <!-- <div class=\"row\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                <div class=\"social\">\n                                    <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\n                                </div>\n                            </div>\n                        </div> -->\n                        <!-- <div class=\"form-group m-b-0 m-t-10\">\n                            <div class=\"col-sm-12 text-center\">\n                                Don't have an account? <a href=\"#/authentication/signup2\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\n                            </div>\n                        </div> -->\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-text.png\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" action=\"index.html\">\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <input class=\"form-control form-control-lg\" (keydown.space)=\"$event.preventDefault()\" [formControl]=\"email2\" type=\"email\" required=\"\" placeholder=\"Email\" [pattern]=\"regx\">\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\"  *ngIf=\"email2.hasError('required') && email2.touched\">\n                                *Email is <strong>required</strong>\n                            </mat-error>\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"email2.hasError('pattern') &&\n                            !email2.hasError('required')\">\n                            *Email is <strong>not valid</strong>\n                        </mat-error>\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg bg-white text-primary\" (click)=\"forget()\" type=\"submit\" name=\"action\">Reset</button>\n                        </div>\n                        <div class=\"col-12 text-center pt-2\">\n                            <a (click)=\"showRecoverForm()\" href=\"\" id=\"to-recover\" class=\"btn btn-block btn-lg bg-white text-primary\">Cancel</a>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent {\n  constructor() {}\n\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <!-- <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span> -->\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                        <div class=\"form-group row \">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12 \">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center \">\n                            <div class=\"col-xs-12 p-b-20 \">\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10 \">\n                            <div class=\"col-sm-12 text-center \">\n                                Already have an account? <a href=\"#/authentication/login \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup2.component.html'\n})\nexport class Signup2Component {\n  constructor() {}\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;\">\n    <div class=\"auth-box on-sidebar\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                        <div class=\"form-group row \">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12 \">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center \">\n                            <div class=\"col-xs-12 p-b-20 \">\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10 \">\n                            <div class=\"col-sm-12 text-center \">\n                                Already have an account? <a href=\"#/authentication/login2 \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidationService {\n  constructor() { }\n  passwordMatchValidator(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (\n        confirmPasswordControl.errors &&\n        !confirmPasswordControl.errors.passwordMismatch\n      ) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n          return true;\n      } else {\n        confirmPasswordControl.setErrors(null);\n          return null;\n      }\n    };\n  }\n}\n"]}