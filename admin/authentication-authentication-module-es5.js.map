{"version":3,"sources":["webpack:///src/app/authentication/404/not-found.component.ts","webpack:///src/app/authentication/404/not-found.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.routing.ts","webpack:///src/app/authentication/lock/changepassword.component.ts","webpack:///src/app/authentication/lock/changePassword.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/login2/login2.component.ts","webpack:///src/app/authentication/login2/login2.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup2/signup2.component.ts","webpack:///src/app/authentication/signup2/signup2.component.html","webpack:///src/app/services/custom-validation.service.ts"],"names":["NotfoundComponent","selector","templateUrl","AuthenticationModule","forChild","declarations","imports","AuthenticationRoutes","path","children","component","changepasswordComponent","fb","apiservice","router","toaster","customvalidator","changepassForm","group","required","minLength","maxLength","validator","passwordMatchValidator","datapass","value","retypepassword","console","log","httpchange","subscribe","res","message","success","navigate","error","changepass","LoginComponent","loginform","recoverform","showRecoverForm","Login2Component","email2","email","loginForm","password","rememberMe","checkRememberMe","data","controls","httplogin","accessToken","userData","localStorage","setItem","JSON","stringify","removeItem","sessionStorage","getItem","userDetails","parse","setValue","e","target","checked","body","httpforget","window","location","reload","rememberFunc","forget","styleUrls","SignupComponent","Signup2Component","CustomValidationService","confirmPassword","formGroup","passwordControl","confirmPasswordControl","errors","passwordMismatch","setErrors","providedIn"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotfoundComponent implements AfterViewInit {\r\n  ngAfterViewInit() {}\r\n}\r\n","<div class=\"error-box\">\r\n    <div class=\"error-body text-center\">\r\n        <h1 class=\"error-title text-danger\">404</h1>\r\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\r\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\r\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { changepasswordComponent } from './lock/changepassword.component'; \r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\n\r\nimport { AuthenticationRoutes } from './authentication.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    changepasswordComponent,\r\n    Login2Component,\r\n    Signup2Component\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(AuthenticationRoutes),\r\n    NgbModule,\r\n    HttpClientModule,\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { changepasswordComponent } from './lock/changepassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\n\r\nexport const AuthenticationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '404',\r\n        component: NotfoundComponent\r\n      },\r\n      {\r\n        path: 'changepassword',\r\n        component: changepasswordComponent\r\n      },\r\n      {\r\n        path: 'login2',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: Login2Component\r\n      },\r\n      {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n      },\r\n      {\r\n        path: 'signup2',\r\n        component: Signup2Component\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport {CustomValidationService} from '../../services/custom-validation.service'\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changePassword.component.html'\r\n})\r\nexport class changepasswordComponent {\r\n  changepassForm:FormGroup;\r\n  constructor(private fb:FormBuilder,private apiservice:ApiService,private router:Router,private toaster:ToastrService,private customvalidator:CustomValidationService) \r\n  {}\r\n  ngOnInit()\r\n  {\r\n    this.changepassForm=this.fb.group({\r\n      \"oldPassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\r\n      \"newPassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\r\n      \"retypepassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]]\r\n    },{\r\n     validator:this.customvalidator.passwordMatchValidator(\"newPassword\",\"retypepassword\")\r\n    });\r\n  }\r\n  changepass()\r\n  {\r\n   let datapass=this.changepassForm.value;\r\n   delete datapass.retypepassword;\r\n   console.log(datapass);\r\n   this.apiservice.httpchange(datapass).subscribe(res=>{\r\n     console.log(res);\r\n     if(res.message==\"Password Changed Successfully\")\r\n     {\r\n      this.toaster.success(res.message,'Change Password');\r\n      this.router.navigate(['dashboard']);\r\n     }\r\n     else\r\n     {\r\n      this.toaster.error(res.message,'Change Password');\r\n     }\r\n   })\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;background-size: 100%;background-position: center;\">\r\n    <div class=\"auth-box\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo-text.png\"></span>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form [formGroup]=\"changepassForm\" class=\"form-horizontal m-t-20\" >\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12\">\r\n                                <input class=\"form-control form-control-lg\" formControlName=\"oldPassword\" type=\"password\" required=\"\" placeholder=\"Old Password\">\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('oldPassword').hasError('required') && changepassForm.controls['oldPassword'].touched\">\r\n                                    *Old Password is required.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('oldPassword').hasError('minlength') &&\r\n                                    !changepassForm.get('oldPassword').hasError('required')\">\r\n                                     *Min 8 characters.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('oldPassword').hasError('maxlength') &&\r\n                                    !changepassForm.get('oldPassword').hasError('required')\">\r\n                                    *Maximum 16 characters long.\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12\">\r\n                                <input class=\"form-control form-control-lg\" formControlName=\"newPassword\" type=\"password\" required=\"\" placeholder=\"New Password\">\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('newPassword').hasError('required') && changepassForm.controls['newPassword'].touched\">\r\n                                    *New Password is required.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('newPassword').hasError('minlength') &&\r\n                                    !changepassForm.get('newPassword').hasError('required')\">\r\n                                     *Min 8 characters.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('newPassword').hasError('maxlength') &&\r\n                                    !changepassForm.get('newPassword').hasError('required')\">\r\n                                    *Maximum 16 characters long.\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12\">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" formControlName=\"retypepassword\" required=\"\" placeholder=\"Retype Password\">\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('required') && changepassForm.controls['retypepassword'].touched\">\r\n                                    *Retype Password is required.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('minlength') &&\r\n                                    !changepassForm.get('retypepassword').hasError('required')\">\r\n                                     *Min 8 characters.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('maxlength') &&\r\n                                    !changepassForm.get('retypepassword').hasError('required')\">\r\n                                    *Maximum 16 characters long.\r\n                                </mat-error>\r\n                                <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"changepassForm.get('retypepassword').hasError('passwordMismatch') &&\r\n                                    !changepassForm.get('retypepassword').hasError('required')\">\r\n                                    *Password don't match\r\n                                </mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                                <button class=\"btn btn-block btn-lg bg-white text-primary\"[disabled]=\"!changepassForm.valid\" (click)=\"changepass()\" type=\"submit\">Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  constructor() { }\r\n\r\n  loginform = true;\r\n  recoverform = false;\r\n\r\n  showRecoverForm() {\r\n    this.loginform = !this.loginform;\r\n    this.recoverform = !this.recoverform;\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\">\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\r\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">Log In</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                                <div class=\"social\">\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab fa-facebook\"></i> </a>\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab fa-google-plus\"></i> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10\">\r\n                            <div class=\"col-sm-12 text-center\">\r\n                                Don't have an account? <a href=\"#/authentication/signup\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\r\n                <span>Enter your Email and instructions will be sent to you!</span>\r\n            </div>\r\n            <div class=\"row m-t-20\">\r\n                <!-- Form -->\r\n                <form class=\"col-12\">\r\n                    <!-- email -->\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-12\">\r\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Username\">\r\n                        </div>\r\n                    </div>\r\n                    <!-- pwd -->\r\n                    <div class=\"row m-t-20\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-block btn-lg btn-danger\" type=\"submit\" name=\"action\">Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport{ApiService} from '../../services/api.service'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login2.component.html',\r\n  styleUrls: ['./login2.scss']\r\n\r\n})\r\nexport class Login2Component {\r\n  loginForm:FormGroup;\r\n  loginform = true;\r\n  recoverform = false;\r\n  email2 = new FormControl('',[Validators.required, Validators.email]);\r\n  constructor(private fb:FormBuilder,private apiservice:ApiService,private router:Router,private toaster:ToastrService) { }\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(8)]),\r\n      rememberMe:new FormControl(false),\r\n    });\r\n    this.checkRememberMe();\r\n  }\r\n    onLogin()\r\n    {\r\n       //console.log(this.loginForm.value);\r\n         let data=this.loginForm.value;\r\n         delete data.rememberMe;\r\n         let rememberMe=this.loginForm.controls['rememberMe'].value;\r\n       this.apiservice.httplogin(data).subscribe(res=>{\r\n         console.log(res.data.accessToken);\r\n         if(res.message==\"Account Login Successfully\")\r\n         {\r\n           this.toaster.success(res.message,'Login');\r\n           if (rememberMe) {\r\n            let userData = this.loginForm.value;\r\n            localStorage.setItem('rememberMe', JSON.stringify(userData))\r\n          } else {\r\n            localStorage.removeItem('rememberMe')\r\n          }\r\n           sessionStorage.setItem(\"accessToken\",res.data.accessToken);\r\n             this.router.navigate(['dashboard']);\r\n         }\r\n         else\r\n         {\r\n          this.toaster.error(res.message,'Login');\r\n         }\r\n       });\r\n       //console.log(rememberMe);\r\n      \r\n    }\r\n\r\n  showRecoverForm() {\r\n    this.loginform = !this.loginform;\r\n    this.recoverform = !this.recoverform;\r\n  }\r\n  checkRememberMe() {\r\n\r\n    if (localStorage.getItem('rememberMe')) {\r\n      let userDetails = JSON.parse(localStorage.getItem('rememberMe'));\r\n      this.loginForm.controls['email'].setValue(userDetails.email);\r\n      this.loginForm.controls['password'].setValue(userDetails.password);\r\n      this.loginForm.controls['rememberMe'].setValue(\"true\");\r\n    }\r\n  }\r\n  rememberFunc(e)\r\n  {\r\n    this.loginForm.controls['rememberMe'].setValue( e.target.checked);\r\n  }\r\n  forget()\r\n  {\r\nlet body={'email':this.email2.value};\r\n         console.log(body);\r\n         this.apiservice.httpforget(body).subscribe(res=>{\r\n           //console.log(res);\r\n           if(res.message==\"New Password Sent\")\r\n         {\r\n           this.toaster.success(res.message,'Forget Password');\r\n           sessionStorage.setItem(\"accessToken\",res.data.accessToken);\r\n            window.location.reload();\r\n         }\r\n         else\r\n         {\r\n          this.toaster.error(res.message,'Forget Password');\r\n         }\r\n         })\r\n             \r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\r\n    <div class=\"auth-box on-sidebar\">\r\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-text.png\" alt=\"logo\"  /></span>\r\n                <!-- <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5> -->\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form [formGroup]=\"loginForm\"class=\"form-horizontal m-t-20\" id=\"loginform\" >\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"email\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\r\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\" *ngIf=\"loginForm.get('email').hasError('required') && loginForm.controls['email'].touched\">\r\n                                *Email is <strong>required</strong>\r\n                            </mat-error>\r\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\" *ngIf=\"loginForm.get('email').hasError('email') &&\r\n                                  !loginForm.get('email').hasError('required')\">\r\n                            *Email is <strong>not valid</strong>\r\n                        </mat-error>\r\n                        </div>\r\n                         \r\n                        \r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\r\n                            </div>\r\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\r\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\"  *ngIf=\"loginForm.get('password').hasError('required') && loginForm.controls['password'].touched\">\r\n                                *Password is <strong>required</strong>\r\n                            </mat-error>\r\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 w-100\"  *ngIf=\" loginForm.get('password').hasError('minlength') &&\r\n                                  !loginForm.get('password').hasError('required')\">\r\n                                *Minimum 8 Character\r\n                            </mat-error>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" (change)=\"rememberFunc($event)\" formControlName=\"rememberMe\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\r\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                    <button  class=\"btn btn-block btn-lg bg-white text-primary\" (click)=\"  onLogin();\" type=\"submit\">Log In</button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                                <div class=\"social\">\r\n                                    <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <!-- <div class=\"form-group m-b-0 m-t-10\">\r\n                            <div class=\"col-sm-12 text-center\">\r\n                                Don't have an account? <a href=\"#/authentication/signup2\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\r\n                            </div>\r\n                        </div> -->\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-text.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\r\n                <span>Enter your Email and instructions will be sent to you!</span>\r\n            </div>\r\n            <div class=\"row m-t-20\">\r\n                <!-- Form -->\r\n                <form class=\"col-12\" action=\"index.html\">\r\n                    <!-- email -->\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-12\">\r\n                            <input class=\"form-control form-control-lg\" [formControl]=\"email2\" type=\"email\" required=\"\" placeholder=\"Email\">\r\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\"  *ngIf=\"email2.hasError('required') && email2.touched\">\r\n                                *Email is <strong>required</strong>\r\n                            </mat-error>\r\n                            <mat-error class=\"text-danger font-weight-bold bg-white px-1 d-block\" *ngIf=\"email2.hasError('email') &&\r\n                            !email2.hasError('required')\">\r\n                            *Email is <strong>not valid</strong>\r\n                        </mat-error>\r\n                        </div>\r\n                    </div>\r\n                    <!-- pwd -->\r\n                    <div class=\"row m-t-20\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-block btn-lg bg-white text-primary\" (click)=\"forget()\" type=\"submit\" name=\"action\">Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html'\r\n})\r\nexport class SignupComponent {\r\n  constructor() {}\r\n\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <!-- <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span> -->\r\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row \">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center \">\r\n                            <div class=\"col-xs-12 p-b-20 \">\r\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10 \">\r\n                            <div class=\"col-sm-12 text-center \">\r\n                                Already have an account? <a href=\"#/authentication/login \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup2.component.html'\r\n})\r\nexport class Signup2Component {\r\n  constructor() {}\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box on-sidebar\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row \">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center \">\r\n                            <div class=\"col-xs-12 p-b-20 \">\r\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10 \">\r\n                            <div class=\"col-sm-12 text-center \">\r\n                                Already have an account? <a href=\"#/authentication/login2 \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidationService {\n  constructor() { }\n  passwordMatchValidator(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (\n        confirmPasswordControl.errors &&\n        !confirmPasswordControl.errors.passwordMismatch\n      ) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n          return true;\n      } else {\n        confirmPasswordControl.setErrors(null);\n          return null;\n      }\n    };\n  }\n}\n"]}